What does the following Code Does? 

1. Physics Integration:
- Uses Pymunk for realistic gravity and collision detection.

2. Gameplay:
-You can click anywhere on the screen to launch a projectile.
-Blocks are placed as targets that interact with the projectiles.

3. Customizable:
-You can modify the size, position, and physics properties of the projectiles, blocks, and floor.


import pygame
import pymunk
import pymunk.pygame_util

# Initialize Pygame and Pymunk
pygame.init()
screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption("Physics-Based Game")
clock = pygame.time.Clock()
space = pymunk.Space()
space.gravity = (0, 900)  # Simulate Earth's gravity
draw_options = pymunk.pygame_util.DrawOptions(screen)

# Create a floor
def create_floor():
    body = pymunk.Body(body_type=pymunk.Body.STATIC)
    body.position = (400, 580)
    shape = pymunk.Segment(body, (-400, 0), (400, 0), 5)
    shape.elasticity = 0.8
    space.add(body, shape)

# Create a projectile
def create_projectile(position):
    body = pymunk.Body(1, pymunk.moment_for_circle(1, 0, 15))
    body.position = position
    shape = pymunk.Circle(body, 15)
    shape.elasticity = 0.5
    shape.friction = 0.5
    space.add(body, shape)
    return body

# Create a target (block)
def create_block(position):
    body = pymunk.Body(5, pymunk.moment_for_box(5, (50, 50)))
    body.position = position
    shape = pymunk.Poly.create_box(body, (50, 50))
    shape.elasticity = 0.5
    shape.friction = 0.8
    space.add(body, shape)
    return body

# Initialize the game
create_floor()
projectiles = []
blocks = [create_block((600, 500)), create_block((650, 450))]

# Game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
            projectiles.append(create_projectile(event.pos))

    # Update physics
    space.step(1 / 50.0)

    # Clear the screen
    screen.fill((135, 206, 235))  # Light blue background
    space.debug_draw(draw_options)

    # Draw instructions
    font = pygame.font.SysFont("Arial", 20)
    text = font.render("Click to launch projectiles!", True, (0, 0, 0))
    screen.blit(text, (10, 10))

    pygame.display.flip()
    clock.tick(60)

pygame.quit()
